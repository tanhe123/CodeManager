<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 定义数据源 Bean, 使用 C3P0 数据源实现 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
            destroy-method="close">
        <!-- 指定链接数据库的驱动-->
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>

     <!--   &lt;!&ndash; 指定链接数据库的 url &ndash;&gt;
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/app_sharewith?useUnicode=true&amp;characterEncoding=utf8"/>
        &lt;!&ndash; 指定链接数据库的用户名 &ndash;&gt;
        <property name="user" value="root"/>
        &lt;!&ndash; 指定链接数据库的密码 &ndash;&gt;
        <property name="password" value="622"/>-->

        <!-- sae 数据库 配置 -->
        <property name="user" value="llno4ojnk0"/>
        <property name="jdbcUrl" value="jdbc:mysql://w.rdc.sae.sina.com.cn:3307/app_sharewith"/>
        <property name="password" value="xmk52i33w4yyj41mzjl4yz00l4lyzkxhk4j1jz4j"/>

        <!-- ace -->
        <!--<property name="user" value="r5la1ud65g0sn258"/>
        <property name="jdbcUrl" value="jdbc:mysql://rdsbauzbjfzbquj.mysql.rds.aliyuncs.com:3306/r5la1ud65g0sn258"/>
        <property name="password" value="6224989a"/>-->

        <!-- mopaas -->
   <!--     <property name="user" value="u6LQM6XVWbjxu" />
        <property name="jdbcUrl" value="jdbc:mysql://10.4.3.92:3306/db0949180df264ae5a48099bf4260a448" />
        <property name="password" value="pPyk3bYLxouQC" />-->

        <!-- 指定链接数据库连接池的最大连接数 -->
        <property name="maxPoolSize" value="40"/>
        <!-- 指定链接数据库连接池的最小连接数 -->
        <property name="minPoolSize" value="1"/>
        <!-- 指定链接数据库连接池的初始化连接数 -->
        <property name="initialPoolSize" value="1"/>

        <!-- sae 建议 -->
        <property name="idleConnectionTestPeriod" value="10"/>
        <!-- 指定链接数据库连接池的最大空闲时间 -->
        <property name="maxIdleTime" value="10"/>
    </bean>

    <!-- 定义 Hibernate 的 SessionFactory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingResources">
            <list>
                <!-- 以下列出所有的 PO 映射文件 -->
                <value>com/xiayule/domain/Code.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <!-- 设置 Hibernate 属性 -->
            <value>
                hibernate.dialect=org.hibernate.dialect.MySQLDialect
                hibernate.hbm2ddl.auto=update
            </value>
        </property>
    </bean>

    <bean id="codeDao" class="com.xiayule.dao.impl.CodeDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="codeService" class="com.xiayule.service.impl.CodeServiceImpl">
        <property name="codeDao" ref="codeDao"/>
        <property name="fileService" ref="saeFileService"/>
    </bean>

    <bean id="searchAction" class="com.xiayule.action.SearchAction">
        <property name="codeService" ref="codeService"/>
    </bean>

    <bean id="commitAction" class="com.xiayule.action.CommitAction">
        <property name="codeService" ref="codeService"/>
        <property name="fileService" ref="saeFileService"/>
    </bean>

    <bean id="displayAction" class="com.xiayule.action.DisplayAction">
        <property name="codeService" ref="codeService"/>
    </bean>

    <bean id="deleteAction" class="com.xiayule.action.DeleteAction">
        <property name="codeService" ref="codeService"/>
        <property name="fileService" ref="saeFileService"/>
    </bean>

    <bean id="qrcodeAction" class="com.xiayule.action.QRCodeAction">

    </bean>

    <!-- file service -->
    <!--
    <bean id="qiniuFileService" class="com.xiayule.service.impl.QiniuFileServiceImpl">
        <property name="accessKey" value="Dch_ifA-S0ffK7_-DC96KuKIA9j6p860Ze37r6Xq"/>
        <property name="secretKey" value="c6p6HS_GOE6_6cTOacHhLQw-UH48GF45Rainq1LG"/>
        <property name="bucketName" value="codemanager"/>
        <property name="domain" value="codemanager.qiniudn.com"/>
    </bean>-->

    <bean id="saeFileService" class="com.xiayule.service.impl.SaeFileServiceImpl">
        <property name="domain" value="sharewith"/>
        <property name="accessKey" value="llno4ojnk0"/>
        <property name="secretKey" value="xmk52i33w4yyj41mzjl4yz00l4lyzkxhk4j1jz4j"/>
        <property name="appName" value="sharewith"/>
    </bean>
    
    <bean id="localFileService" class="com.xiayule.service.impl.LocalFileServiceImpl">

    </bean>


    <!-- 每一次注入都要 new 一个 -->
    <bean id="code" class="com.xiayule.domain.Code" scope="prototype">
        <property name="fileService" ref="saeFileService"/>
    </bean>

    <!-- 配置 Hibernate 的局部事务管理器，使用 HibernateTransactionManager 类 -->
    <!-- 该类实现 PlatformTransactionManager 接口，是针对 Hibernate 的特定实现 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <!-- 配置 HibernateTransactionManager 时需要注入 SessionFactory 的引用 -->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>


    <!-- 配置事务增强处理 Bean，指定事务管理器 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- 用于配置详细的事务语义 -->
        <tx:attributes>
            <!-- 所有以 'get' 开头的方法是 read-only 的 -->
            <tx:method name="get*" read-only="true"/>
            <!-- 其他方法使用默认的事务配置 -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <!-- 配置一个切入点 -->
        <aop:pointcut id="codePointcut"
                      expression="bean(codeService)"/>
        <!-- 指定在 leePointcut 切入点应用 txAdvice 事务增强处理 -->
        <aop:advisor advice-ref="txAdvice"
                     pointcut-ref="codePointcut"/>
    </aop:config>
</beans>